\documentclass{beamer}
%\usetheme{metropolis}
\usepackage[utf8]{inputenc}
\usepackage{polski}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\usepackage{epstopdf}
\usepackage{colortbl, xcolor}
\usepackage{url}

\newcommand\Fontvi{\fontsize{6}{7.2}\selectfont}

\title{Przewidywanie właściwości sekwencji biologicznych w oparciu o analizę n-gramów}
\date{}
\author{Michał Burdukiewicz}
\institute{Zakład Bioinformatyki i Genomiki, Uniwersytet Wrocławski \\
\begin{flushright}
Promotor pracy: prof. dr hab. Paweł Mackiewicz \\
Promotor pomocniczy: dr Paweł Błażej
\end{flushright}
}

\begin{document}

  <<knitrIntro, echo = FALSE, message=FALSE,warning=FALSE>>=
source("my_ggplot_theme.R")

library(dplyr)
library(reshape2)
library(xtable)
library(biogram)
library(seqinr)
library(VennDiagram)
  
source("script.R")  

print_bt <- function(x) {
  rws <- 0L:(nrow(x) - 1)
  col <- c("\\rowcolor{green!10}", "\\rowcolor{blue!10}", "\\rowcolor{red!10}", "\\rowcolor{yellow!10}")
  print(xtable(x, digits = 0), booktabs = TRUE,
        add.to.row = list(pos = as.list(rws), command = col),
        print.results = FALSE)
}

print_bt2 <- function(x) {
  rws <- seq(1, nrow(x) - 1, by = 2)
  col <- rep("\\rowcolor[gray]{0.85}", length(rws))
  print(xtable(x, digits = 0), booktabs = TRUE,
        add.to.row = list(pos = as.list(rws), command = col),
        print.results = FALSE, include.rownames = FALSE)
}  
  
cls <- c("\\colorbox{green!10}", "\\colorbox{blue!10}", "\\colorbox{red!10}", "\\colorbox{yellow!10}")

group2df <- function(group_list, caption = NULL, label = NULL) {
  tab <- data.frame(Groups = sapply(group_list, function(i)
    paste0(toupper(sort(i)), collapse = ", ")))
  tab <- cbind(ID = 1L:nrow(tab), tab)
  rws <- seq(1, nrow(tab) - 1, by = 2)
  col <- rep("\\rowcolor[gray]{0.85}", length(rws))
  colnames(tab) <- c("Subgroup ID", "Amino acids")
  res <- print(xtable(tab, caption = caption, label = label), 
               include.rownames = FALSE, booktabs = TRUE,
               add.to.row = list(pos = as.list(rws), command = col), print.results = FALSE, 
               caption.placement = "top", sanitize.text.function = identity, 
               sanitize.rownames.function = identity)
  #res
  print(xtable(tab))
}  
  
amyloids_plot <- read.csv("amyloid_plot_data.csv")

levels(amyloids_plot[["et"]]) <- c("Best-performing simplified alphabet", 
                                   "simplified alphabet", "Full alphabet", 
                                   "Standard simplified alphabet")


amyloids_plot[["len_range"]] <- factor(amyloids_plot[["len_range"]], 
                                       levels = c("Test peptide length: 6 ", "Test peptide length: 7-10", 
                                                  "Test peptide length: 11-15", "Test peptide length: 16-25"))

subdat <- filter(amyloids_plot, pos == "Training peptide length: 6")

best_enc <- list(c("G"), 
                 c("K", "P", "R"),
                 c("I", "L", "V"),
                 c("F", "W", "Y"),
                 c("A", "C", "H", "M"),
                 c("D", "E", "N", "Q", "S", "T"))
names(best_enc) <- 1L:6


@
  

\maketitle

\begin{frame}{Plan prezentacji}

\tableofcontents

\end{frame} 

\begin{frame}{} 

Badania \textit{in silico} pozwalają efektywniej planować prace eksperymentalne.

Przykłady: 

\begin{itemize}
\item przewidywanie właściwości białek (np. obecność sekwencji sygnałowych, amyloidogenność),  
\item przewidywanie warunków hodowlanych mikroorganizmów.
\end{itemize}

\end{frame}   
  
\begin{frame}{Cel} 

Opracowanie metodologii analizy sekwencji biologicznych opierającej się na zrozumiałych dla człowieka regułach decyzyjnych. 

\end{frame}   

\section{n-gramy i uproszczone alfabety}

\begin{frame}
n-gramy (k-tuple, k-mery):
\begin{itemize}
\item podsekwencje (ciągłe lub z przerwami) $n$ reszt aminokwasowych lub nukleotydowych,
\item bardziej informatywne niż pojedyncze reszty.
\end{itemize}
\end{frame}  

\begin{frame}

\textcolor{red}{\texttt{HTESQRCWYM}}

\textcolor{blue}{\texttt{AQRGNDKIPV}}

Przykłady n-gramów:

\begin{enumerate}
    \item \textcolor{red}{\texttt{H}}, \textcolor{blue}{\texttt{A}}, \textcolor{red}{\texttt{T}}, \textcolor{blue}{\texttt{Q}}
    \item \textcolor{red}{\texttt{HT}}, \textcolor{blue}{\texttt{AQ}}, \textcolor{red}{\texttt{TE}}, \textcolor{blue}{\texttt{QR}}
    \item \textcolor{red}{\texttt{H-E}}, \textcolor{blue}{\texttt{A-R}}, \textcolor{red}{\texttt{T-S}}, \textcolor{blue}{\texttt{Q-G}}
    \item \textcolor{red}{\texttt{H--SQ}}, \textcolor{blue}{\texttt{A--GN}}, \textcolor{red}{\texttt{T--QR}}, \textcolor{blue}{\texttt{Q--ND}}
\end{enumerate}

\end{frame}



\begin{frame}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4.5,results='asis'>>=
L <- 5
m <- 20 
m2 <- 6
n <- 1:5
n_max <- L*m^n
n_max2 <- L*m2^n
#dat <- data.frame(n = c(n, n), n_max = c(n_max, n_max2), m = c(rep(m, 5), rep(m2, 5)))
dat <- data.frame(n = n, n_max = n_max, m = rep(m, 5))
dat[["m"]] <- factor(dat[["m"]])

ggplot(dat, aes(x = n, y = n_max, color = m, label = formatC(n_max, digits = 4))) + 
  geom_line(linetype="dotted", size=1.5) + 
  geom_point(size=4, shape=16) +
  geom_text(size = 4, vjust = -1.5, hjust = "inward", color = "red") +
  coord_cartesian(ylim = c(1, 4.5e7)) +
  scale_x_continuous("n", breaks = 0L:5) +
  scale_y_continuous("Całkowita liczba n-gramów (skala logarytmiczna)",
                     trans = "log10") +
  scale_color_discrete("Rozmiar alfabetu") +
  my_theme
@

Dłuższe n-gramy są bardziej informatywne, ale tworzą większe przestrzenie atrybutów.

\end{frame}

\begin{frame}{QuiPT}  

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.6,results='asis'>>=
load("data/times2.RData")

times_dat <- do.call(rbind, lapply(times, function(i) 
  t(sapply(i, function(j) {
    c(slow = unname(j[["slow"]]["elapsed"]),
      quick = unname(j[["quick"]]["elapsed"]))
  }))
)) %>% 
  data.frame %>% 
  mutate(size = sort(rep(1L:5*10, 10))) %>% 
  melt(id.vars = "size") %>% 
  group_by(size, variable) %>% 
  summarise(value = mean(value)) %>% 
  ungroup %>% 
  mutate(variable = factor(variable, labels = c("Test permutacyjny", "QuiPT")))

ggplot(times_dat, aes(x = size, y = value, color = variable)) +
  geom_point() +
  geom_line(linetype = "dotted") +
  scale_y_continuous("Czas [s]") +
  scale_x_continuous("Liczba testowanych n-gramów") +
  scale_color_manual("Test", values = c("red", "blue")) +
  my_theme
@

QuiPT (dostępny jako funkcja w pakiecie \textbf{biogram}) jest szybszy niż klasyczne testy permutacyjne.
\end{frame}

\subsection{Uproszczone alfabety}

\begin{frame}
Uproszczone alfabety:
\begin{itemize}
\item aminokwasy są grupowane w większe zbiory na podstawie 
określonych kryteriów,
\item łatwiejsze przewidywanie struktur~\citep{murphy_simplified_2000},
\item tworzenie bardziej uogólnionych modeli.
\end{itemize}
\end{frame}


\begin{frame}  
Poniższe peptydy wydają się być całkowicie inne pod względem składu aminokwasowego.


<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4.5,results='asis'>>=
seq1 <- c("f", "k", "v", "w", "p", "d", "h", "g", "s", "g")
seq2 <- c("y", "m", "c", "i", "y", "r", "a", "q", "t", "n")
@

Sekwencja I: 

\texttt{\Sexpr{toupper(paste0(seq1, collapse = ""))}}

\medskip

Sekwencja II: 

\texttt{\Sexpr{toupper(paste0(seq2, collapse = ""))}}

\end{frame}  


\begin{frame}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4.5,results='asis'>>=
seq_dat <- rbind(data.frame(seq = "Sekwencja I", pos = 1L:10, 
                            aa = seq1, val = aaprop["ARGP820101", seq1]),
                 data.frame(seq = "Sekwencja II", pos = 1L:10, 
                            aa = seq2, val = aaprop["ARGP820101", seq2])) %>% 
  mutate(hydroph = val < 0.4)

ggplot(seq_dat, aes(x = factor(pos), y = val, label = toupper(aa), 
                    group = seq, colour = hydroph)) +
  geom_text(vjust = "outward", size = 4, show_guide = FALSE) +
  #geom_point(size = 0) +
  geom_line(linetype = "dotted", color = "black") +
  facet_wrap(~ seq, ncol = 1) +
  scale_x_discrete("Pozycja") +
  scale_y_continuous("Hydrofobowość (Argos et al., 1982)", expand = c(.1, .1)) +
  #scale_color_discrete("Hydrofobowy")
  #guides(colour = guide_legend(override.aes = list(size=4))) +
  my_theme 
@

\end{frame}  

\begin{frame}
\begin{table}
\begin{tabular}{cl}
\toprule
Grupa & Aminokwasy \\ 
\midrule
  1 & C, I, L, K, M, F, P, W, Y, V \\ 
\rowcolor[gray]{0.85}  2 & A, D, E, G, H, N, Q, R, S, T \\ 
\bottomrule
\end{tabular}
\end{table}

\begin{columns}
\begin{column}{0.44\textwidth}
 
Sekwencja I: \texttt{\Sexpr{toupper(paste0(seq1, collapse = ""))}} \textrightarrow

Sekwencja II: \texttt{\Sexpr{toupper(paste0(seq2, collapse = ""))}} \textrightarrow

\end{column}
\begin{column}{0.5\textwidth}  %%<--- here

\texttt{\Sexpr{paste0(c(rep(1, 5), rep(2, 5)), collapse = "")}}

\texttt{\Sexpr{paste0(c(rep(1, 5), rep(2, 5)), collapse = "")}}
\end{column}
\end{columns}
\end{frame}  



\section{Przewidywanie amyloidów}

\begin{frame}{Białka amyloidowe}

Agregaty białek amyloidowe występują w tkankach osób cierpiących na zaburzenia 
neurodegeneracyjne, takie jak choroba Alzheimera i Parkinsona, a także wiele innych 
schorzeń.

\begin{figure} 
\includegraphics[width=0.61\textwidth]{static_figure/amyloid_aggregates.jpg}
\end{figure}

\footnotesize
Agregaty amyloidowe (czerwone) wokół neuronów (zielone). Strittmatter Laboratory, Yale University.

\end{frame}  

  
\begin{frame}{Białka amyloidowe}

Za agregację białek amyloidogennych odpowiedzialne są sekwencje peptydowe o właściwościach amyloidogennych (hot spots):

\begin{itemize}
\item krótkie (6-15 aminokwasów),
\item bardzo zmienny, zazwyczaj hydrofobowy skład aminokwasowy,
\item tworzą unikalne $\beta$-struktury.
\end{itemize}

\begin{figure} 
\includegraphics[width=0.9\textwidth]{static_figure/zipper_structure.jpg}
\end{figure}

\footnotesize\citet{sawaya_atomic_2007}
\end{frame}


\begin{frame}{AmyloGram}
AmyloGram: oparte na analizie n-gramowej narzędzie do przewidywania amyloidów~\citep{burdukiewicz_prediction_2016, BurdukiewiczAmyloidogenicmotifsrevealed2017a}.
\end{frame}


    \begin{frame}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram1.eps}
\end{figure}
  \end{frame}

\begin{frame}{Walidacja krzyżowa}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

levels(subdat[["len_range"]]) <- c("Zbiór testowy (peptydy o długości 6)", 
                                   "Zbiór testowy (peptydy o długości 7-10)", 
                                   "Zbiór testowy (peptydy o długości 11-15)", 
                                   "Zbiór testowy (peptydy o długości 16-25)")

levels(subdat[["et"]]) <-  c("Najlepszy uproszczony alfabet", "Uproszczony alfabet", 
                             "Pełny alfabet", "Standardowy uproszczony alfabet")

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 3, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et == "Pełny alfabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()

@
%AUC (Area Under the Curve) measures the performance of a classifier (1 - classifier always properly recognizes amyloid proteins, 0 - classifier never properly recognizes amyloid proteins).

\end{frame}



\begin{frame}{Standardowe uproszczone alfabety}
Opublikowano kilka uproszczonych alfabetów, które w założeniu miały służyć do opisywania struktur drugo- i trzeciorzędowych białek~\citep{kosiol_new_2004, melo_accuracy_2006}.
  \end{frame}
  
    \begin{frame}{Standardowe uproszczone alfabety}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram2.eps}
\end{figure}


  \end{frame}


    \begin{frame}{Walidacja krzyżowa}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 3, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et %in% c("Pełny alfabet", "Standardowy uproszczony alfabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3L:4], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3L:4], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()

@

Standardowe alfabety aminokwasowe nie poprawiają jakości predykcji amyloidów.
  
  \end{frame}


\begin{frame}{Nowe uproszczone alfabety}

\begin{itemize}
\item 17 miar fizykochemicznych wybranych z bazy AAIndex: 
  \begin{itemize}
    \item rozmiar, 
    \item hydrofobowość, 
    \item częstość w $\beta$-kartkach,
    \item zdolność do tworzenia kontaktów.
  \end{itemize}
  \item 524 284 uproszczonych alfabetów aminokwasowych o różnej wielkości (od 3 do 6 grup).
  \end{itemize}

    \end{frame}
  
    \begin{frame}{Nowe uproszczone alfabety}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram3.eps}
\end{figure}
  \end{frame}



\begin{frame}{Walidacja krzyżowa}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
subdat2 <- droplevels(filter(subdat, et != "Najlepszy uproszczony alfabet"))

ggplot(subdat2, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 3, color = "black", fill = "white") +
  geom_point(data = filter(subdat2, et %in% c("Pełny alfabet", "Standardowy uproszczony alfabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[2L:4], drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[2L:4], drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()

@
%  \small
%Hinges of boxes correspond to 
%the 0.25 and 0.75 quartiles. The bar inside the box represents the median. The 
%gray circles correspond to the simplified alphabets with the AUC outside the 0.95 
%confidence interval.

  
\end{frame}


  
\begin{frame}{Najlepszy uproszczony alfabet}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 3) +
  geom_point(data = filter(subdat, et != "Uproszczony alfabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue"), drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()
@
\end{frame}

\begin{frame}{Najlepszy uproszczony alfabet}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
# cat(group2df(best_enc, caption = "The best-performing simplified alphabet."))
@
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Grupa & Aminokwasy \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
   \end{frame}

     \begin{frame}{Najlepszy uproszczony alfabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Grupa & Aminokwasy \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
   \rowcolor{blue!20} 3 & I, L, V \\ 
   \rowcolor{blue!20}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Grupy 3 i 4 - aminokwasy hydrofobowe.  
   \end{frame}
  
  
     \begin{frame}{Najlepszy uproszczony alfabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Grupa & Aminokwasy \\ 
  \midrule
  1 & G \\ 
   \rowcolor{red!20}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Grupa 2 - reszty aminokwasowe zakłócające $\beta$-struktury.  
   
   \end{frame}  
   
\begin{frame}{Podobieństwo alfabetów i jakość predykcji}
Czy alfabety podobne do najlepszego uproszczonego alfabetu również dobrze przewidują amyloidy?
\end{frame}

\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=4,warning=FALSE>>=
si_dat <- read.csv2("si_dat.csv")

levels(si_dat[["et"]]) <- c("Najlepszy uproszczony alfabet", "Uproszczony alfabet", 
                             "Pełny alfabet", "Standardowy uproszczony alfabet", 
                            "Standardowy uproszczony alfabet")


simil_plot <- ggplot(si_dat, aes(x=si, y=AUC_mean)) + 
  # geom_point(data = si_dat, 
  #            aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  #geom_density_2d(color = "black", contour = TRUE) +
    geom_bin2d(bins = 30) +
  # stat_density2d(aes(fill=..level..), color = "black",
  #                contour = TRUE, geom = "polygon", alpha = 0.5, binwidth = 50, bins = 10) +
  scale_fill_continuous("Liczba alfabetów", low = "gold", high = "goldenrod4") +
  xlab("Similarity index") +
  ylab("AUC") +
  my_theme +
  geom_point(data = droplevels(filter(si_dat, et != "Uproszczony alfabet")),
             aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2), 
         fill = guide_colorbar(barwidth = unit(5, "line"))) +
  scale_shape_manual("", values = c(16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "green", "blue"), drop = FALSE) +
  theme(panel.grid.major = element_line(color = "lightgrey", size = 0.5)) 

print(simil_plot)
@
Similarity index~\citep{stephenson_unearthing_2013} mierzy podobieństwo między dwoma uproszczonymi alfabetami (1:~identyczne alfabety, 0:~zupełnie niepodobne alfabety).
\end{frame}



\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=4,warning=FALSE>>=
print(simil_plot)
@
Korelacja między similarity index i średnim AUC jest istotna ($\textrm{p-value} \leq 2.2^{-16}$; $\rho = 0.51$).
\end{frame}
   
\begin{frame}{}
Czy informatywne n-gramy znalezione przez QuiPT są związane z amyloidogennością?
\end{frame}


\begin{frame}{Informatywne n-gramy}
<<echo = FALSE,message=FALSE,fig.align='center',fig.width=14,fig.height=6,warning=FALSE>>=
ngram_freq <- read.csv("ngram_freq.csv")

ngram_freq_plot <- mutate(ngram_freq, decoded_name = gsub("_", "-", decoded_name)) %>%
  mutate(decoded_name = factor(decoded_name, levels = as.character(decoded_name)),
         amyloid = diff_freq > 0) %>%
  melt() %>%
  filter(variable %in% c("pos", "neg"),
         association != "Not found") %>%
  droplevels %>%
  mutate(variable = factor(variable, labels = c("Amyloid", "Nieamyloid")),
         association = factor(association, levels = c("Amyloidogenny", "Nieamyloidogenny")))

ggplot(ngram_freq_plot, aes(x = decoded_name, y = value)) +
  geom_bar(aes(fill = variable), position = "dodge", stat = "identity") +
  geom_point(data = group_by(ngram_freq_plot, decoded_name)  %>% filter(value == max(value)),
             aes(y = value + 0.004, shape = association), size = 6) +
  scale_fill_manual("", values = c("gold", "darkmagenta")) +
  scale_shape_manual("Motyw:", breaks = c("Amyloidogenny", "Nieamyloidogenny"), values = c(16, 17, NA)) +
  scale_y_continuous("Częstość") +
  scale_x_discrete("") +
  my_theme +
  theme(panel.grid.major.y = element_line(color = "lightgrey", size = 0.5)) 

@

Spośród 65 najbardziej informatywnych n-gramów, 15 (23\%) jest również obecnych w motywach aminokwasowych znalezionych ekperymentalnie~\citep{paz_sequence_2004}.
\end{frame}


\begin{frame}{Porównanie z innymi narzędziami}

\begin{table}[ht]
\centering

\begin{tabular}{ccccc}
  \toprule
Program & AUC & MCC \\ 
  \midrule
AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
  \rowcolor{white}PASTA 2.0 \citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
   FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
  \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
   \bottomrule
\end{tabular}
\end{table}

Klasyfikator wytrenowany z wykorzystaniem najlepszego uproszczonego alfabetu, AmyloGram, został porównany z innymi narzędziami do przewidywania amyloidów z użyciem zewnętrznego zbioru danych \textit{pep424}.

\end{frame}

% \begin{frame}{Benchmark results}
% 
% \begin{table}[ht]
% \centering
% 
% \begin{tabular}{ccccc}
%   \toprule
% Classifier & AUC & MCC \\ 
%   \midrule
% AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
%   \rowcolor{white}PASTA 2.0 \citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
%    FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
%   \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
%    \bottomrule
% \end{tabular}
% \end{table}
% 
% MCC (Matthew's Correlation Coefficient) measures the performance of a classifier (1 - classifier always properly recognizes amyloid proteins, -1 - classifier never properly recognizes amyloid proteins).
% 
% \end{frame}



\begin{frame}{Walidacja eksperymentalna}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/FalsePositives.eps}
\end{figure}
\end{frame}

\begin{frame}{Walidacja eksperymentalna}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ExperimentalValidation.eps}
\end{figure}
\end{frame}

\begin{frame}{Nowe białko amyloidowe}

\includegraphics[width=0.75\textwidth]{static_figure/line.jpg}

Nowy amyloid funkcjonalny produkowany przez Methanospirillum sp. \citep{10.3389/fmicb.2018.02729} został wybrany do analiz \textit{in vitro} przez AmyloGram.

\end{frame}

\section{Przewidywanie peptydów sygnałowych}

\begin{frame}{Peptydy sygnałowe}

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/SP.eps}
\end{figure}

Peptydy sygnałowe:
        \begin{itemize}[<+->]
          \item krótkie (20-30 reszt) N-końcowe fragmenty białek tworzące $\alpha$-helisy,
            \item kierują białka do układu wewnątrzbłonowego a następne do sekrecji lub kompartymentów wewnątrzkomórkowch.
        \end{itemize}
\end{frame}


  
\begin{frame}{Peptydy sygnałowe}

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/SP.eps}
\end{figure}

Peptydy sygnałowe są bardzo zmienne, ale zawsze zawierają trzy charakterystyczne domeny~\citep{hegde_surprising_2006}:
\begin{itemize}
        \item n-region: 5-8 dodatnio naładowanych reszt aminokwasowych~\citep{nielsen_prediction_1998},
        \item h-region: bardzo hydrofobowe reszty~\citep{nielsen_prediction_1998},
        \item c-region: kilka (3-5) polarnych reszt.
\end{itemize}

\end{frame}


%Peptydy sygnałowe rozpoczynają się naładowanym dodatnio n-regionem, po którym występuje hydrofobowy h-region i c-region zakończony miejscem cięcia rozpoznawanym przez peptydazę sygnałową. 

  
\begin{frame}{Peptydy sygnałowe}  
Skład aminokwasowy peptydów sygnałowych u \textit{Plasmodium} sp. (do których należy m. in. zarodziec malarii) jest inny od składu peptydów sygnałowych innych eukariontów. Dlatego też narzędzia do przewidywania peptydów sygnałowych źle radzą sobie z przewidywaniem peptydów sygnałowych u \textit{Plasmodium} sp.

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4,results='asis'>>=
plot_pca(pca_full)
  #ggtitle("PCA częstości aminokwasów w peptydach sygnałowych")
@  

PCA częstości aminokwasów.
\end{frame}  

\begin{frame}{signalHsmm}

signalHsmm \citep{BurdukiewiczPredictionSignalPeptides2018}: zastosowanie ukrytych modeli semi-Markowa i uproszczonych alfabetów aminokwasowych w celu przewidywania peptydów sygnałowych w białkach \textit{Plasmodium} sp.

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/HSMMs.eps}
\end{figure}

\end{frame}

\begin{frame}{Porównanie z innymi predyktorami}

\begin{table}[H]
\centering
\small
\begin{tabular}{rllll}
  \toprule
Algorytm & Czułość & Swoistość & MCC & AUC \\ 
  \midrule
signalP 4.1 (no tm) & 0.8235 & 
0.9100 & 0.6872 & 
0.8667 \\ 
   \rowcolor[gray]{0.85}signalP 4.1 (tm) 
& 0.6471 & 
0.9431 & 0.6196 & 0.7951 \\ 
  signalP 3.0 (NN) & 0.8824 
& 0.9052 & 0.7220 & 
0.8938 \\ 
   \rowcolor[gray]{0.85}signalP 3.0 (HMM) 
 & 0.6275 & 
0.9194 & 0.5553 & 0.7734 \\ 
  PrediSi & 0.3333 & \textbf{0.9573} 
& 0.3849 & 0.6453 
\\ 
   \rowcolor[gray]{0.85}Philius 
& 0.6078 & 
0.9336 & 0.5684 & 0.7707 \\ 
  Phobius & 0.6471 & 0.9289 & 
0.5895 & 0.7880 \\ 
   \rowcolor[gray]{0.85}signalHsmm-2010 & 0.9804 & 0.8720 & 0.7409 & 0.9262 \\ 
  signalHsmm-2010 (ident. 50\%) & \textbf{1.0000} & 0.8768 & \textbf{0.7621} & 
\textbf{0.9384} \\ 
   \rowcolor[gray]{0.85}signalHsmm-2010 (pełny alfabet) & 0.8431 & 0.9005 & 0.6853 & 
0.8718 \\ 
  signalHsmm-1987 & 0.9216 & 0.8910 & 0.7271 & 0.9063 \\ 
   \rowcolor[gray]{0.85}signalHsmm-1987 (ident. 50\%) & 0.9412 & 0.8768 & 0.7194 
& 
0.9090 \\ 
  signalHsmm-1987 (pełny alfabet) & 0.7647 & 0.9052 & 0.6350 & 0.8350 \\ 
   \bottomrule
\end{tabular}
\end{table}


\end{frame}

\begin{frame}{Porównanie z innymi predyktorami}
signalHsmm efektywnie uczy się rozpoznawać peptydy sygnałowe na bardzo małych zbiorach danych.

Przewidywania signalHsmm są na tyle uniersalne, że pozwalają również przewiywać nietypowe peptydy sygnałowe spotykane w białkach \textit{Plasmodium} sp.
\end{frame}


\section{Przewidywanie warunków hodowlanych metanobakterii}

\begin{frame}{PhyMet\textsuperscript{2}}
\begin{figure} 
\includegraphics[width=0.50\textwidth]{static_figure/suplem2.eps}
\end{figure}


\url{metanogen.biotech.uni.wroc.pl}~\citep{jablonski2015methanogenic, BurdukiewiczPhyMet2databasetoolkit2018}

\end{frame}

\begin{frame}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/Figure2.eps}
\end{figure}
\end{frame}

\begin{frame}{Podsumowanie}
\begin{itemize}
\item Zastosowanie n-gramów (k-merów), czyli ciągów aminokwasów lub nukleotydów o długości $n$ okazało się skuteczne do charakterystyki sekwencji peptydów sygnałowych i amyloidogennych oraz markerów molekularnych metanogenów, a następnie do przewidywania tych peptydów oraz optymalnych warunków hodowli metanogenów w oparciu o te markery.
\item Zastosowanie uproszczonych alfabetów aminokwasowych, w których aminokwasy są grupowane ze względu na swoje podobieństwo fizykochemiczne lub funkcjonalne, okazało się bardzo dobrym podejściem do opisu sekwencji aminokwasowych o zróżnicowanym składzie i wyeksponowania ich cech istotnych do przewidywania peptydów sygnałowych i amyloidogennych.
\item Opracowana procedura QuiPT (\textbf{Qui}ck \textbf{P}ermutation \textbf{T}est) pozwala na szybki wybór najbardziej informatywnych n-gramów i uzyskiwanie dokładnych p-wartości.
\item Zastosowana metodologia tworzenia uproszczonych alfabetów umożliwia identyfikowania kluczowych cech związanych z charakterystycznymi cechami peptydów.
\item Metoda n-gramów i uproszczonych alfabetów nadaje się do trenowania algorytmów na małych zbiorach danych różnych sekwencji.
\item Opracowany model peptydów sygnałowych wykazał wysoką hydrofobowość h-regionu i polarność n-regionu oraz dużą zawartość reszt aminokwasowych z grupą hydroksylową w c-regionie. Reszty zaburzające strukturę $\alpha$-helis, czyli glicyna i prolina są stosunkowo częste w c-regionie i bardzo rzadkie w h-regionie.
\item Opracowany model peptydów amyloidogennych wykazał, że charakteryzują się one dużą zawartością reszt aminokwasowych alifatycznych, niepolarnych  i aromatycznych. Miejsca amyloidogenne mogą również zawierać kilka reszt polarnych, lecz nie posiadają reszt zakłócających tworzenie $\beta$-struktur, tj. glicyny, lizyny, proliny i argininy.
\item Optymalne warunki hodowli metanogenów (czas podwojenia populacji, optymalna temperatura wzrostu, optymalne stężenia NaCl oraz optymalne pH) wykazują związki z filogenetycznym pokrewieństwem tych archeonów i mogą być przewidywane w oparciu o standardowe markery molekularne, jak 16S rRNA.

\end{itemize}
\end{frame}  

\begin{frame}{Podsumowanie}

Web serwery:
\begin{itemize}
\item \textbf{AmyloGram}: \url{http://www.smorfland.uni.wroc.pl/shiny/AmyloGram/}.
\item \textbf{MethanoGram}: \url{http://www.smorfland.uni.wroc.pl/shiny/MethanoGram/}.
\item \textbf{signalHsmm}: \url{http://www.smorfland.uni.wroc.pl/shiny/signalHsmm/}.
\end{itemize}


Pakiety \textbf{R}:
\begin{itemize}
\item \textbf{biogram}: \url{https://cran.r-project.org/package=biogram}.
\item \textbf{AmyloGram}: \url{https://cran.r-project.org/package=AmyloGram}.
\item \textbf{signalHsmm}: \url{https://cran.r-project.org/package=signalHsmm}.
\end{itemize}


\end{frame}  

\begin{frame}{Podziękowania}
Mentorzy:
\begin{itemize}
\item \textbf{Paweł Mackiewicz (University of Wrocław)}.
\item Lars Kaderali (University of Greifswald).
\item Małgorzata Kotulska (Wrocław University of Science and Technology).
\item Marcin Łukaszewicz (University of Wrocław).
\item Henrik Nielsen (Technical University of Denmark).
\item Stefan Rödiger (Brandenburg University of Technology Cottbus-Senftenberg).
\item Andreas Weinhäusel (Austrian Institute of Technology).
\end{itemize}
\end{frame}


\begin{frame}{Podziękowania}
Współpracownicy:
\begin{itemize}
\item Anna Duda-Madej (Wrocław Medical University).
\item Przemysław Gagat (University of Wrocław).
\item Marlena G\k{a}sior-Głogowska (Wrocław University of Science and Technology).
\item Sławomir Jabłoński (University of Wrocław).
\item Rafał Kolenda (Sanger Institute).
\item Chris Lauber (Technical University Dresden).
\item Piotr Sobczyk (Wrocław University of Science and Technology).
\end{itemize}

\end{frame}

\begin{frame}{Podziękowania}
Finansowanie:
\begin{itemize}
\item Narodowe Centrum Nauki (Preludium i Etiuda).
\item COST ACTION CA15110 (Harmonising standardisation strategies to increase efficiency and competitiveness of European life-science research).
\item KNOW Wrocław Center for Biotechnology.
\item InnoProfile-Transfer-Projekt 03IPT611X przyznanym przez Ministerstwo Edukacji i Badań Naukowych Niemiec.
\end{itemize}

\end{frame}

\begin{frame}[allowframebreaks]{Publikacje}

\small
\begin{enumerate}  
\item Kolenda R., \underline{Burdukiewicz M.}, Schiebel J., Rödiger S, Sauer L., Szabo I., Orłowska A., Weinreich J., Nitschke J., Böhm, A., Gerber U., Roggenbuck D., Schierack P., Adhesion of Salmonella to pancreatic secretory granule membrane major glycoprotein GP2 of human and porcine origin depends on FimH sequence variation, \textbf{Frontiers in microbiology}, 2018 [liczba cytacji: 0].

\item Mackiewicz D., Posacki P., \underline{Burdukiewicz M.}, Błażej P. \textit{Role of recombination and faithfulness to partner in sex chromosome degeneration}. \textbf{Scientific Reports}, 2018 [liczba cytacji: 0].

\item \underline{Burdukiewicz M.}, Gagat P. Jab\l{}o\'nski S., Chilimoniuk J., 
Gaworski M., Mackiewicz P., \L{}ukaszewicz M. \textit{PhyMet2: a database and toolkit for phylogenetic and metabolic analyses of methanogens}.
\textbf{Environmental Microbiology Reports}, 2018 [liczba cytacji: 0].

\item \underline{Burdukiewicz M.}, Sobczyk P. R\"{o}diger S., Duda-Madej A., 
Mackiewicz P., Kotulska M., \textit{Amyloidogenic motifs revealed by n-gram 
analysis}. 
\textbf{Scientific Reports}, 2017 [liczba cytacji: 2]. 

\item Schiebel J., B\"{o}hm A., Nitschke J., \underline{Burdukiewicz M.}, 
Weinreich J., Ali A., Roggenbuck
D., R\"{o}diger S., Schierack P., \textit{Genotypic and phenotypic 
characteristics in association
with biofilm formation in different pathotypes of human clinical Escherichia 
coli isolates},
\textbf{Applied and Environmental Microbiology}, 2017 [liczba cytacji: 2].

\item R\"{o}diger S., \underline{Burdukiewicz M.}, Spiess A.-N., Blagodatskikh 
K., \textit{Enabling reproducible real-time quantitative PCR research: the RDML 
package}. 
\textbf{Bioinformatics}, 2017 [liczba cytacji: 0].

\item \underline{Burdukiewicz M.}, R\"{o}diger S., Sobczyk P., Menschikowski 
M., Schierack P.,
Mackiewicz P., \textit{Methods for comparing multiple digital PCR experiments}, 
\textbf{Biomolecular
Detection and Quantification}, 2016 [liczba cytacji: 2].

\item Spiess A.-N., R\"{o}diger S., \underline{Burdukiewicz M.}, Volksdorf T., 
Tellinghuisen J., \textit{System-
specific periodicity in quantitative real-time polymerase chain reaction data 
questions
threshold-based quantitation}, \textbf{Scientific Reports}, 2016 [liczba cytacji: 4]. % [40 points].

\item Kolenda R., \underline{Burdukiewicz M.}, Schierack P., \textit{A 
systematic review and meta-analysis of the epidemiology of pathogenic 
escherichia coli of calves and the role of calves as reservoirs for human 
pathogenic E. coli}. \textbf{Frontiers in Cellular and Infection Microbiology}, 
2015 [liczba cytacji: 34]. % [40 points].

\item R\"{o}diger S., \underline{Burdukiewicz M.}, Schierack P., 
\textit{chipPCR: an R Package to Pre-Process Raw Data of Amplification Curves}. 
\textbf{Bioinformatics}, 2015 [liczba cytacji: 12]. % [45 points].

\item R\"{o}diger S., \underline{Burdukiewicz M.}, Blagodatskikh K., Jahn M., 
Schierack P., 
\textit{R as an
Environment for the Reproducible Analysis of DNA Amplification Experiments}, 
\textbf{R Journal}, 2015 [liczba cytacji: 14]. %  [30 points].

\item Spiess A.-N., Deutschmann C., \underline{Burdukiewicz M.}, Himmelreich 
R., 
Klat K., Schierack P., R\"{o}diger S., \textit{Impact of smoothing on parameter 
estimation in quantitative dna amplification experiments}. \textbf{Clinical 
Chemistry}, 2014 [liczba cytacji: 13]. %  [50 points].

\end{enumerate}
\end{frame}

\begin{frame}{Podsumowanie}
\begin{itemize}
\item Zastosowanie n-gramów (k-merów), czyli ciągów aminokwasów lub nukleotydów o długości $n$ okazało się skuteczne do charakterystyki sekwencji peptydów sygnałowych i amyloidogennych oraz markerów molekularnych metanogenów, a następnie do przewidywania tych peptydów oraz optymalnych warunków hodowli metanogenów w oparciu o te markery.
\item Zastosowanie uproszczonych alfabetów aminokwasowych, w których aminokwasy są grupowane ze względu na swoje podobieństwo fizykochemiczne lub funkcjonalne, okazało się bardzo dobrym podejściem do opisu sekwencji aminokwasowych o zróżnicowanym składzie i wyeksponowania ich cech istotnych do przewidywania peptydów sygnałowych i amyloidogennych.
\item Opracowana procedura QuiPT (\textbf{Qui}ck \textbf{P}ermutation \textbf{T}est) pozwala na szybki wybór najbardziej informatywnych n-gramów i uzyskiwanie dokładnych p-wartości.
\item Zastosowana metodologia tworzenia uproszczonych alfabetów umożliwia identyfikowania kluczowych cech związanych z charakterystycznymi cechami peptydów.
\item Metoda n-gramów i uproszczonych alfabetów nadaje się do trenowania algorytmów na małych zbiorach danych różnych sekwencji.
\item Opracowany model peptydów sygnałowych wykazał wysoką hydrofobowość h-regionu i polarność n-regionu oraz dużą zawartość reszt aminokwasowych z grupą hydroksylową w c-regionie. Reszty zaburzające strukturę $\alpha$-helis, czyli glicyna i prolina są stosunkowo częste w c-regionie i bardzo rzadkie w h-regionie.
\item Opracowany model peptydów amyloidogennych wykazał, że charakteryzują się one dużą zawartością reszt aminokwasowych alifatycznych, niepolarnych  i aromatycznych. Miejsca amyloidogenne mogą również zawierać kilka reszt polarnych, lecz nie posiadają reszt zakłócających tworzenie $\beta$-struktur, tj. glicyny, lizyny, proliny i argininy.
\item Optymalne warunki hodowli metanogenów (czas podwojenia populacji, optymalna temperatura wzrostu, optymalne stężenia NaCl oraz optymalne pH) wykazują związki z filogenetycznym pokrewieństwem tych archeonów i mogą być przewidywane w oparciu o standardowe markery molekularne, jak 16S rRNA.

\end{itemize}
\end{frame}  


\begin{frame}[allowframebreaks]
        \frametitle{References}
  \bibliographystyle{apalike}
  \bibliography{references}
\end{frame}  

\begin{frame}{Ranking alphabets}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

set.seed(3)
exdat <- data.frame(
  alph = paste0("A", 1L:5), 
  c1 = 0.7 + runif(5)/5,
  c2 = 0.75 + runif(5)/5,
  c3 = 0.65 + runif(5)/5
) %>% 
  melt %>% 
  group_by(variable) %>% 
  mutate(r = rank(value)) %>% 
  ungroup

best_alph <- group_by(exdat, alph) %>%
  summarise(cr = sum(r)) %>%
  arrange(desc(cr)) %>% 
  slice(1) %>% 
  select(alph) %>% 
  unlist %>% 
  as.character

exdat <- mutate(exdat, best = alph == best_alph)

ggplot(exdat, aes(y = variable, x = value, color = alph)) +
  geom_point(size = 4) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Category", labels = paste0("Category ", 1L:3)) +
  scale_color_discrete("Alphabet") +
  my_theme

@
\end{frame}


\begin{frame}{Ranking alphabets}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(exdat, aes(y = variable, x = value, color = alph, label = (r - 6)*-1)) +
  geom_text(size = 4) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Category", labels = paste0("Category ", 1L:3)) +
  scale_color_discrete("Alphabet") +
  scale_shape_discrete("Best simplified alphabet") +
  my_theme


@
We rank alphabets separately in all length categories assuming the rank 1 for the best AUC, rank 2 for the second best AUC and so on.


\end{frame}



\begin{frame}{Ranking alphabets}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(exdat, aes(y = variable, x = value, color = alph, shape = best)) +
  geom_point(size = 4) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Category", labels = paste0("Category ", 1L:3)) +
  scale_color_discrete("Alphabet") +
  scale_shape_discrete("Best simplified alphabet") +
  my_theme


@
The best-performing alphabet has the lowest sum of ranks.  

\end{frame}


\end{document}